------------------------------------------------------------------------------------------------ MIGRACION 1 DE 3 
CREATE PROC MigrarInmueble AS

        --- Carga de tablas transaccionales

		INSERT INTO DATA_TEAM.Provincia (PROVINCIA)
            SELECT DISTINCT INMUEBLE_PROVINCIA
            FROM gd_esquema.Maestra
            WHERE INMUEBLE_BARRIO IS NOT NULL AND INMUEBLE_LOCALIDAD IS NOT NULL AND INMUEBLE_PROVINCIA IS NOT NULL AND
                NOT EXISTS (SELECT 1 FROM DATA_TEAM.Provincia p WHERE p.PROVINCIA = gd_esquema.Maestra.INMUEBLE_PROVINCIA)

		INSERT INTO DATA_TEAM.Localidad (LOCALIDAD, LOCALIDAD_PROVINCIA)
            SELECT DISTINCT INMUEBLE_LOCALIDAD, INMUEBLE_PROVINCIA
            FROM gd_esquema.Maestra
            WHERE INMUEBLE_BARRIO IS NOT NULL AND INMUEBLE_LOCALIDAD IS NOT NULL AND INMUEBLE_PROVINCIA IS NOT NULL AND
                NOT EXISTS (SELECT 1 FROM DATA_TEAM.Localidad l WHERE l.LOCALIDAD+l.LOCALIDAD_PROVINCIA = gd_esquema.Maestra.INMUEBLE_LOCALIDAD+gd_esquema.Maestra.INMUEBLE_PROVINCIA AND l.LOCALIDAD_PROVINCIA IS NOT NULL)

        INSERT INTO DATA_TEAM.Barrio (BARRIO, BARRIO_LOCALIDAD, BARRIO_PROVINCIA)
            SELECT DISTINCT INMUEBLE_BARRIO, INMUEBLE_LOCALIDAD, INMUEBLE_PROVINCIA
            FROM gd_esquema.Maestra
            WHERE INMUEBLE_BARRIO IS NOT NULL AND INMUEBLE_LOCALIDAD IS NOT NULL AND INMUEBLE_PROVINCIA IS NOT NULL AND
                NOT EXISTS (SELECT 1 FROM DATA_TEAM.Barrio b WHERE b.BARRIO+b.BARRIO_LOCALIDAD+b.BARRIO_PROVINCIA = gd_esquema.Maestra.INMUEBLE_BARRIO+gd_esquema.Maestra.INMUEBLE_LOCALIDAD+gd_esquema.Maestra.INMUEBLE_PROVINCIA)

        INSERT INTO DATA_TEAM.Tipo_inmueble (TIPO_INMUEBLE)
            SELECT DISTINCT INMUEBLE_TIPO_INMUEBLE
            FROM gd_esquema.Maestra
            WHERE INMUEBLE_TIPO_INMUEBLE IS NOT NULL AND 
                NOT EXISTS (SELECT 1 FROM DATA_TEAM.Tipo_inmueble ti WHERE ti.TIPO_INMUEBLE = gd_esquema.Maestra.INMUEBLE_TIPO_INMUEBLE);

        INSERT INTO DATA_TEAM.Cant_ambientes (CANT_AMBIENTES)
            SELECT DISTINCT INMUEBLE_CANT_AMBIENTES
            FROM gd_esquema.Maestra
            WHERE INMUEBLE_CANT_AMBIENTES IS NOT NULL AND 
                NOT EXISTS (SELECT 1 FROM DATA_TEAM.Cant_ambientes ca WHERE ca.CANT_AMBIENTES = gd_esquema.Maestra.INMUEBLE_CANT_AMBIENTES);

        INSERT INTO DATA_TEAM.Orientacion (ORIENTACION)
            SELECT DISTINCT INMUEBLE_ORIENTACION
            FROM gd_esquema.Maestra
            WHERE INMUEBLE_ORIENTACION IS NOT NULL AND 
                NOT EXISTS (SELECT 1 FROM DATA_TEAM.Orientacion o WHERE o.ORIENTACION = gd_esquema.Maestra.INMUEBLE_ORIENTACION);

        INSERT INTO DATA_TEAM.Disposicion (DISPOSICION)
            SELECT DISTINCT INMUEBLE_DISPOSICION
            FROM gd_esquema.Maestra
            WHERE INMUEBLE_DISPOSICION IS NOT NULL AND 
                NOT EXISTS (SELECT 1 FROM DATA_TEAM.Disposicion d WHERE d.DISPOSICION = gd_esquema.Maestra.INMUEBLE_DISPOSICION);

    -- Carga de la tabla "Inmueble"
	INSERT INTO DATA_TEAM.Inmueble 
    (
        INMUEBLE_CODIGO,
        INMUEBLE_NOMBRE,
        INMUEBLE_DESCRIPCION,
        INMUEBLE_DIRECCION,
        INMUEBLE_SUPERFICIETOTAL,
        INMUEBLE_ANTIGUEDAD,
        INMUEBLE_EXPESAS,
        INMUEBLE_BARRIO, -- FK
		INMUEBLE_LOCALIDAD,
		INMUEBLE_PROVINCIA,
        INMUEBLE_TIPO_INMUEBLE, -- FK
        INMUEBLE_CANT_AMBIENTES, -- FK
        INMUEBLE_ORIENTACION, -- FK
        INMUEBLE_DISPOSICION, -- FK
        INMUEBLE_PROPIETARIO --FK
	)
    SELECT DISTINCT 
        m.INMUEBLE_CODIGO, 
        m.INMUEBLE_NOMBRE, 
        m.INMUEBLE_DESCRIPCION, 
        m.INMUEBLE_DIRECCION, 
        m.INMUEBLE_SUPERFICIETOTAL, 
        m.INMUEBLE_ANTIGUEDAD, 
        m.INMUEBLE_EXPESAS,
        m.INMUEBLE_BARRIO,  
		m.INMUEBLE_LOCALIDAD,
		m.INMUEBLE_PROVINCIA,
        m.INMUEBLE_TIPO_INMUEBLE,
        m.INMUEBLE_CANT_AMBIENTES,
        m.INMUEBLE_ORIENTACION,
        m.INMUEBLE_DISPOSICION,
        m.PROPIETARIO_DNI AS INMUEBLE_PROPIETARIO
	FROM 
	    gd_esquema.Maestra m
	WHERE
		m.INMUEBLE_CODIGO IS NOT NULL AND 
		m.PROPIETARIO_DNI IS NOT NULL AND 
		m.ANUNCIO_CODIGO IS NOT NULL AND 
		m.AGENTE_DNI IS NOT NULL AND 
		m.SUCURSAL_CODIGO IS NOT NULL AND
		m.INMUEBLE_BARRIO IS NOT NULL AND  
		m.INMUEBLE_LOCALIDAD IS NOT NULL AND
		m.INMUEBLE_PROVINCIA IS NOT NULL

GO

CREATE PROCEDURE MigrarInmuebleCaracteristica AS
BEGIN
    SET NOCOUNT ON;

    INSERT INTO DATA_TEAM.Inmueble_Caracteristica (
        INMUEBLE_CODIGO,
		INMUEBLE_CARACTERISTICA_WIFI,
		INMUEBLE_CARACTERISTICA_CABLE,
		INMUEBLE_CARACTERISTICA_CALEFACCION,
		INMUEBLE_CARACTERISTICA_GAS
	)
	SELECT 
        INMUEBLE_CODIGO,
		INMUEBLE_CARACTERISTICA_WIFI,
		INMUEBLE_CARACTERISTICA_CABLE,
		INMUEBLE_CARACTERISTICA_CALEFACCION,
		INMUEBLE_CARACTERISTICA_GAS
	FROM gd_esquema.Maestra
	WHERE 
		INMUEBLE_CODIGO IS NOT NULL;

END
GO

CREATE PROC MigrarPropietario AS
	INSERT INTO DATA_TEAM.Propietario
    (	
		PROPIETARIO_DNI,
		PROPIETARIO_NOMBRE,
		PROPIETARIO_APELLIDO,
		PROPIETARIO_FECHA_REGISTRO,
		PROPIETARIO_TELEFONO,
		PROPIETARIO_MAIL,
		PROPIETARIO_FECHA_NAC
	)
    SELECT DISTINCT
        m.PROPIETARIO_DNI,
        m.PROPIETARIO_NOMBRE,
        m.PROPIETARIO_APELLIDO,
        m.PROPIETARIO_FECHA_REGISTRO,
        m.PROPIETARIO_TELEFONO,
        m.PROPIETARIO_MAIL,
        m.PROPIETARIO_FECHA_NAC
	FROM 
	    gd_esquema.Maestra m
	WHERE
		m.INMUEBLE_CODIGO IS NOT NULL AND 
		m.PROPIETARIO_DNI IS NOT NULL AND 
		m.ANUNCIO_CODIGO IS NOT NULL AND 
		m.AGENTE_DNI IS NOT NULL AND 
		m.SUCURSAL_CODIGO IS NOT NULL;
GO

CREATE PROC MigrarAnuncio AS

    INSERT INTO DATA_TEAM.Tipo_periodo (TIPO_PERIODO)
	SELECT DISTINCT ANUNCIO_TIPO_PERIODO
	FROM gd_esquema.Maestra
	WHERE ANUNCIO_TIPO_PERIODO IS NOT NULL AND 
		NOT EXISTS (SELECT 1 FROM DATA_TEAM.Tipo_periodo tp WHERE tp.TIPO_PERIODO = gd_esquema.Maestra.ANUNCIO_TIPO_PERIODO);

		
    INSERT INTO DATA_TEAM.Estado_anuncio (ESTADO_ANUNCIO)
        SELECT DISTINCT ANUNCIO_ESTADO
        FROM gd_esquema.Maestra
        WHERE ANUNCIO_ESTADO IS NOT NULL AND 
            NOT EXISTS (SELECT 1 FROM DATA_TEAM.Estado_anuncio ea WHERE ea.ESTADO_ANUNCIO = gd_esquema.Maestra.ANUNCIO_ESTADO);

            
    INSERT INTO DATA_TEAM.Moneda (MONEDA)
        SELECT DISTINCT ANUNCIO_MONEDA
        FROM gd_esquema.Maestra
        WHERE ANUNCIO_MONEDA IS NOT NULL AND 
            NOT EXISTS (SELECT 1 FROM DATA_TEAM.Moneda m WHERE m.MONEDA = gd_esquema.Maestra.ANUNCIO_MONEDA);

            
    INSERT INTO DATA_TEAM.Tipo_operacion (TIPO_OPERACION)
        SELECT DISTINCT ANUNCIO_TIPO_OPERACION
        FROM gd_esquema.Maestra
        WHERE ANUNCIO_TIPO_OPERACION IS NOT NULL AND 
            NOT EXISTS (SELECT 1 FROM DATA_TEAM.Tipo_operacion t WHERE t.TIPO_OPERACION = gd_esquema.Maestra.ANUNCIO_TIPO_OPERACION);


	INSERT INTO DATA_TEAM.Anuncio (
        ANUNCIO_CODIGO,
		ANUNCIO_FECHA_PUBLICACION,
		ANUNCIO_PRECIO_PUBLICADO,
		ANUNCIO_COSTO_ANUNCIO,
		ANUNCIO_FECHA_FINALIZACION,
		ANUNCIO_TIPO_OPERACION,
		ANUNCIO_MONEDA,
		ANUNCIO_ESTADO,
		ANUNCIO_TIPO_PERIODO,
        ANUNCIO_INMUEBLE,
		ANUNCIO_AGENTE
    )
    SELECT DISTINCT
        m.ANUNCIO_CODIGO,
        m.ANUNCIO_FECHA_PUBLICACION,
        m.ANUNCIO_PRECIO_PUBLICADO,
        m.ANUNCIO_COSTO_ANUNCIO,
        m.ANUNCIO_FECHA_FINALIZACION,
        m.ANUNCIO_TIPO_OPERACION,
        m.ANUNCIO_MONEDA,
        m.ANUNCIO_ESTADO,
        m.ANUNCIO_TIPO_PERIODO,
        m.INMUEBLE_CODIGO,
        m.AGENTE_DNI AS ANUNCIO_AGENTE
	FROM 
	    gd_esquema.Maestra m
	WHERE
		m.INMUEBLE_CODIGO IS NOT NULL AND 
		m.PROPIETARIO_DNI IS NOT NULL AND 
		m.ANUNCIO_CODIGO IS NOT NULL AND 
		m.AGENTE_DNI IS NOT NULL AND 
		m.SUCURSAL_CODIGO IS NOT NULL;
GO

CREATE PROC MigrarAgente AS
INSERT INTO DATA_TEAM.Agente (
		AGENTE_NOMBRE,
		AGENTE_APELLIDO,
        AGENTE_DNI,
        AGENTE_FECHA_REGISTRO,
		AGENTE_TELEFONO,
		AGENTE_MAIL,
		AGENTE_FECHA_NAC,
		AGENTE_SUCURSAL  --FK 
    )
    SELECT DISTINCT
        m.AGENTE_NOMBRE,
        m.AGENTE_APELLIDO,
        m.AGENTE_DNI,
        m.AGENTE_FECHA_REGISTRO,
        m.AGENTE_TELEFONO,
        m.AGENTE_MAIL,
        m.AGENTE_FECHA_NAC,
        m.SUCURSAL_CODIGO AS AGENTE_SUCURSAL
    FROM 
	    gd_esquema.Maestra m
	WHERE
		m.INMUEBLE_CODIGO IS NOT NULL AND 
		m.PROPIETARIO_DNI IS NOT NULL AND 
		m.ANUNCIO_CODIGO IS NOT NULL AND 
		m.AGENTE_DNI IS NOT NULL AND 
		m.SUCURSAL_CODIGO IS NOT NULL;
GO

CREATE PROC MigrarSucursal AS

    INSERT INTO DATA_TEAM.Provincia (PROVINCIA)
        SELECT DISTINCT SUCURSAL_PROVINCIA
        FROM gd_esquema.Maestra
        WHERE SUCURSAL_PROVINCIA IS NOT NULL AND 
            NOT EXISTS (SELECT 1 FROM DATA_TEAM.Provincia p WHERE p.PROVINCIA = gd_esquema.Maestra.SUCURSAL_PROVINCIA);

    INSERT INTO DATA_TEAM.Localidad (LOCALIDAD, LOCALIDAD_PROVINCIA)
        SELECT DISTINCT SUCURSAL_LOCALIDAD, SUCURSAL_PROVINCIA
        FROM gd_esquema.Maestra
        WHERE SUCURSAL_LOCALIDAD IS NOT NULL AND SUCURSAL_PROVINCIA IS NOT NULL AND
            NOT EXISTS (SELECT 1 FROM DATA_TEAM.Localidad l WHERE l.LOCALIDAD+l.LOCALIDAD_PROVINCIA = gd_esquema.Maestra.SUCURSAL_LOCALIDAD+gd_esquema.Maestra.SUCURSAL_PROVINCIA);


INSERT INTO DATA_TEAM.Sucursal
    (
        SUCURSAL_CODIGO,
        SUCURSAL_NOMBRE,
        SUCURSAL_DIRECCION,
        SUCURSAL_TELEFONO,
        SUCURSAL_LOCALIDAD,
        SUCURSAL_PROVINCIA
    ) 
    SELECT DISTINCT
    m.SUCURSAL_CODIGO,
    m.SUCURSAL_NOMBRE,
    m.SUCURSAL_DIRECCION,
    m.SUCURSAL_TELEFONO,
    m.SUCURSAL_LOCALIDAD,
    m.SUCURSAL_PROVINCIA
	FROM 
	    gd_esquema.Maestra m
	WHERE
		m.INMUEBLE_CODIGO IS NOT NULL AND 
		m.PROPIETARIO_DNI IS NOT NULL AND 
		m.ANUNCIO_CODIGO IS NOT NULL AND 
		m.AGENTE_DNI IS NOT NULL AND 
		m.SUCURSAL_CODIGO IS NOT NULL;
GO
---------------------------------------------------------------------------------------------------------------------------- MIGRACION 2 DE 3
CREATE PROC MigrarVenta AS

    INSERT INTO DATA_TEAM.Moneda (MONEDA)
        SELECT DISTINCT VENTA_MONEDA
        FROM gd_esquema.Maestra
        WHERE VENTA_MONEDA IS NOT NULL AND 
            NOT EXISTS (SELECT 1 FROM DATA_TEAM.Moneda m WHERE m.MONEDA = gd_esquema.Maestra.VENTA_MONEDA);


    INSERT INTO DATA_TEAM.Venta (
        VENTA_CODIGO,
        VENTA_FECHA,
        VENTA_PRECIO_VENTA,
        VENTA_COMISION,
        VENTA_MONEDA,
        VENTA_ANUNCIO,
        VENTA_COMPRADOR
    ) SELECT DISTINCT
        m.VENTA_CODIGO,
        m.VENTA_FECHA,
        m.VENTA_PRECIO_VENTA,
        m.VENTA_COMISION,
        m.VENTA_MONEDA,
        m.ANUNCIO_CODIGO,
        m.COMPRADOR_DNI
        FROM gd_esquema.Maestra  m
        WHERE 
            m.ANUNCIO_CODIGO IS NOT NULL AND 
            m.AGENTE_DNI IS NOT NULL AND 
            m.SUCURSAL_CODIGO IS NOT NULL AND 
            m.VENTA_CODIGO IS NOT NULL AND 
            m.COMPRADOR_DNI IS NOT NULL;
GO

CREATE PROC MigrarComprador AS
    INSERT INTO DATA_TEAM.Comprador (
        COMPRADOR_APELLIDO,
        COMPRADOR_NOMBRE,
        COMPRADOR_DNI,
        COMPRADOR_FECHA_REGISTRO,
        COMPRADOR_TELEFONO,
        COMPRADOR_MAIL,
        COMPRADOR_FECHA_NAC
    ) SELECT DISTINCT
        m.COMPRADOR_APELLIDO,
        m.COMPRADOR_NOMBRE,
        m.COMPRADOR_DNI,
        m.COMPRADOR_FECHA_REGISTRO,
        m.COMPRADOR_TELEFONO,
        m.COMPRADOR_MAIL,
        m.COMPRADOR_FECHA_NAC
        FROM gd_esquema.Maestra  m
        WHERE 
            m.ANUNCIO_CODIGO IS NOT NULL AND 
            m.AGENTE_DNI IS NOT NULL AND 
            m.SUCURSAL_CODIGO IS NOT NULL AND 
            m.VENTA_CODIGO IS NOT NULL AND 
            m.COMPRADOR_DNI IS NOT NULL;	
GO

CREATE PROC MigrarPagoVenta AS

    INSERT INTO DATA_TEAM.Moneda (MONEDA)
        SELECT DISTINCT PAGO_VENTA_MONEDA
        FROM gd_esquema.Maestra
        WHERE PAGO_VENTA_MONEDA IS NOT NULL AND 
            NOT EXISTS (SELECT 1 FROM DATA_TEAM.Moneda m WHERE m.MONEDA = gd_esquema.Maestra.PAGO_VENTA_MONEDA);

    INSERT INTO DATA_TEAM.Medio_pago (MEDIO_PAGO)
        SELECT DISTINCT PAGO_VENTA_MEDIO_PAGO
        FROM gd_esquema.Maestra
        WHERE PAGO_VENTA_MEDIO_PAGO IS NOT NULL AND 
            NOT EXISTS (SELECT 1 FROM DATA_TEAM.Medio_pago m WHERE m.Medio_pago = gd_esquema.Maestra.PAGO_VENTA_MEDIO_PAGO);


    INSERT INTO DATA_TEAM.Pago_venta 
    (
        PAGO_VENTA_IMPORTE,
        PAGO_VENTA_MONEDA, -- FK
        PAGO_VENTA_COTIZACION,
        PAGO_VENTA_MEDIO_PAGO, -- FK
        PAGO_VENTA_CODIGO
    )
    SELECT DISTINCT
        m.PAGO_VENTA_IMPORTE,
        m.PAGO_VENTA_MONEDA,
        m.PAGO_VENTA_COTIZACION,
        m.PAGO_VENTA_MEDIO_PAGO,
        m.VENTA_CODIGO AS PAGO_VENTA_CODIGO
    FROM gd_esquema.Maestra  m
    WHERE 
        m.ANUNCIO_CODIGO IS NOT NULL AND 
        m.AGENTE_DNI IS NOT NULL AND 
        m.SUCURSAL_CODIGO IS NOT NULL AND 
        m.VENTA_CODIGO IS NOT NULL AND 
        m.COMPRADOR_DNI IS NOT NULL;	
GO
--------------------------------------------------------------------------------------------------------------------------- MIGRACION 3 DE 3

CREATE PROC MigrarAlquiler AS

    INSERT INTO DATA_TEAM.Alquiler_estado (ALQUILER_ESTADO)                   
        SELECT DISTINCT ALQUILER_ESTADO
        FROM gd_esquema.Maestra
        WHERE ALQUILER_ESTADO IS NOT NULL AND 
            NOT EXISTS (SELECT 1 FROM DATA_TEAM.Alquiler_estado m WHERE m.Alquiler_estado = gd_esquema.Maestra.ALQUILER_ESTADO);
 
    INSERT INTO DATA_TEAM.Alquiler 
    (
        ALQUILER_CODIGO,
        ALQUILER_FECHA_INICIO,
        ALQUILER_FECHA_FIN,
        ALQUILER_CANT_PERIODOS,
        ALQUILER_DEPOSITO,
        ALQUILER_COMISION,
        ALQUILER_GASTOS_AVERIGUA,
        ALQUILER_ESTADO, -- FK
        ALQUILER_SUCURSAL,
        ALQUILER_ANUNCIO,
        ALQUILER_INQUILINO
    )
    SELECT DISTINCT
        m.ALQUILER_CODIGO,
        m.ALQUILER_FECHA_INICIO,
        m.ALQUILER_FECHA_FIN,
        m.ALQUILER_CANT_PERIODOS,
        m.ALQUILER_DEPOSITO,
        m.ALQUILER_COMISION,
        m.ALQUILER_GASTOS_AVERIGUA,
        m.ALQUILER_ESTADO, -- FK
        m.SUCURSAL_CODIGO AS ALQUILER_SUCURSAL,
        m.ANUNCIO_CODIGO AS ALQUILER_ANUNCIO,
        m.INQUILINO_DNI AS ALQUILER_INQUILINO
    FROM gd_esquema.Maestra  m
    WHERE 
        m.ANUNCIO_CODIGO IS NOT NULL AND 
        m.AGENTE_DNI IS NOT NULL AND 
        m.SUCURSAL_CODIGO IS NOT NULL AND 
        m.ALQUILER_CODIGO IS NOT NULL AND 
        m.INQUILINO_DNI IS NOT NULL;
GO

CREATE PROC MigrarInquilino AS
    INSERT INTO DATA_TEAM.Inquilino 
    (
        INQUILINO_NOMBRE,
        INQUILINO_APELLIDO,
        INQUILINO_DNI,
        INQUILINO_FECHA_REGISTRO,
        INQUILINO_TELEFONO,
        INQUILINO_MAIL,
        INQUILINO_FECHA_NAC
    )
    SELECT DISTINCT
        m.INQUILINO_NOMBRE,
        m.INQUILINO_APELLIDO,
        m.INQUILINO_DNI,
        m.INQUILINO_FECHA_REGISTRO,
        m.INQUILINO_TELEFONO,
        m.INQUILINO_MAIL,
        m.INQUILINO_FECHA_NAC
    FROM gd_esquema.Maestra  m
    WHERE 
        m.ANUNCIO_CODIGO IS NOT NULL AND 
        m.AGENTE_DNI IS NOT NULL AND 
        m.SUCURSAL_CODIGO IS NOT NULL AND 
        m.ALQUILER_CODIGO IS NOT NULL AND 
        m.INQUILINO_DNI IS NOT NULL;
GO

CREATE PROC MigrarPagoAlquiler AS
    INSERT INTO DATA_TEAM.Pago_alquiler 
    (
        PAGO_ALQUILER_CODIGO,
        PAGO_ALQUILER_ALQ,
        PAGO_ALQUILER_FECHA,
        PAGO_ALQUILER_FECHA_VENCIMIENTO,
        PAGO_ALQUILER_NRO_PERIODO,
        PAGO_ALQUILER_DESC,
        PAGO_ALQUILER_FEC_INI,
        PAGO_ALQUILER_FEC_FIN,
        PAGO_ALQUILER_IMPORTE,
        PAGO_ALQUILER_MEDIO_PAGO
    )
    SELECT DISTINCT
        PAGO_ALQUILER_CODIGO,
        ALQUILER_CODIGO AS PAGO_ALQUILER_ALQ,
        PAGO_ALQUILER_FECHA,
        PAGO_ALQUILER_FECHA_VENCIMIENTO,
        PAGO_ALQUILER_NRO_PERIODO,
        PAGO_ALQUILER_DESC,
        PAGO_ALQUILER_FEC_INI,
        PAGO_ALQUILER_FEC_FIN,
        PAGO_ALQUILER_IMPORTE,
        PAGO_ALQUILER_MEDIO_PAGO
    FROM gd_esquema.Maestra  m
    WHERE 
        m.PAGO_ALQUILER_CODIGO IS NOT NULL AND 
        m.AGENTE_DNI IS NOT NULL AND 
        m.SUCURSAL_CODIGO IS NOT NULL AND 
        m.ALQUILER_CODIGO IS NOT NULL AND 
        m.INQUILINO_DNI IS NOT NULL;
GO

CREATE PROC MigrarDetalleAlquiler AS 
    INSERT INTO DATA_TEAM.Detalle_Alquiler 
        (
            DETALLE_ALQ_ALQUILER,
            DETALLE_ALQ_NRO_PERIODO_INI,
            DETALLE_ALQ_NRO_PERIODO_FIN,
            DETALLE_ALQ_PRECIO
        )
        SELECT DISTINCT
            ALQUILER_CODIGO AS DETALLE_ALQ_ALQUILER,
            DETALLE_ALQ_NRO_PERIODO_INI,
            DETALLE_ALQ_NRO_PERIODO_FIN,
            DETALLE_ALQ_PRECIO
        FROM gd_esquema.Maestra  m
        WHERE 
            m.DETALLE_ALQ_PRECIO IS NOT NULL AND 
            m.AGENTE_DNI IS NOT NULL AND 
            m.SUCURSAL_CODIGO IS NOT NULL AND 
            m.ALQUILER_CODIGO IS NOT NULL AND 
            m.INQUILINO_DNI IS NOT NULL;
GO

------------------------------------------- CREACION DE TABLAS 

IF (NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'DATA_TEAM')) 
BEGIN
    EXEC ('CREATE SCHEMA [DATA_TEAM] AUTHORIZATION [dbo]')
END
GO

------------- Tablas tipificadas ----------------- 
if not exists (select * from sysobjects where name='Provincia' and xtype='U')
CREATE TABLE DATA_TEAM.Provincia (
    PROVINCIA NVARCHAR(100) PRIMARY KEY,
);
if not exists (select * from sysobjects where name='Localidad' and xtype='U')
CREATE TABLE DATA_TEAM.Localidad (
    LOCALIDAD NVARCHAR(100) NOT NULL,
	LOCALIDAD_PROVINCIA NVARCHAR(100) NOT NULL FOREIGN KEY REFERENCES DATA_TEAM.Provincia
);
ALTER TABLE DATA_TEAM.Localidad ADD CONSTRAINT PK_Localidad PRIMARY KEY (
	LOCALIDAD,
	LOCALIDAD_PROVINCIA
)
GO
if not exists (select * from sysobjects where name='Barrio' and xtype='U')
CREATE TABLE DATA_TEAM.Barrio(
    BARRIO NVARCHAR(100) NOT NULL,
	BARRIO_LOCALIDAD NVARCHAR(100) NOT NULL,
	BARRIO_PROVINCIA NVARCHAR(100) NOT NULL FOREIGN KEY REFERENCES DATA_TEAM.Provincia
)

ALTER TABLE DATA_TEAM.Barrio ADD CONSTRAINT PK_Barrio PRIMARY KEY (
	BARRIO,
	BARRIO_LOCALIDAD,
	BARRIO_PROVINCIA
)
GO

ALTER TABLE DATA_TEAM.Barrio ADD CONSTRAINT FK_Localidad FOREIGN KEY(BARRIO_LOCALIDAD, BARRIO_PROVINCIA) REFERENCES DATA_TEAM.Localidad(
	LOCALIDAD,
	LOCALIDAD_PROVINCIA
)
GO

if not exists (select * from sysobjects where name='Cant_ambientes' and xtype='U')
CREATE TABLE DATA_TEAM.Cant_ambientes (
    CANT_AMBIENTES NVARCHAR(100) PRIMARY KEY,
);
if not exists (select * from sysobjects where name='Orientacion' and xtype='U')
CREATE TABLE DATA_TEAM.Orientacion (
    ORIENTACION NVARCHAR(100) PRIMARY KEY,
);
if not exists (select * from sysobjects where name='Disposicion' and xtype='U')
CREATE TABLE DATA_TEAM.Disposicion (
    DISPOSICION NVARCHAR(100) PRIMARY KEY,
);
if not exists (select * from sysobjects where name='Tipo_inmueble' and xtype='U')
CREATE TABLE DATA_TEAM.Tipo_inmueble (
    TIPO_INMUEBLE NVARCHAR(100) PRIMARY KEY,
);
if not exists (select * from sysobjects where name='Tipo_periodo' and xtype='U')
CREATE TABLE DATA_TEAM.Tipo_periodo (
    TIPO_PERIODO NVARCHAR(100) PRIMARY KEY,
);
if not exists (select * from sysobjects where name='Estado_anuncio' and xtype='U')
CREATE TABLE DATA_TEAM.Estado_anuncio (
    ESTADO_ANUNCIO NVARCHAR(100) PRIMARY KEY,
);
if not exists (select * from sysobjects where name='Moneda' and xtype='U')
CREATE TABLE DATA_TEAM.Moneda (
    MONEDA NVARCHAR(100) PRIMARY KEY,
);
if not exists (select * from sysobjects where name='Tipo_operacion' and xtype='U')
CREATE TABLE DATA_TEAM.Tipo_operacion (
    TIPO_OPERACION NVARCHAR(100) PRIMARY KEY,
);
if not exists (select * from sysobjects where name='Medio_pago' and xtype='U')
CREATE TABLE DATA_TEAM.Medio_pago (
    MEDIO_PAGO NVARCHAR(100) PRIMARY KEY,
);
if not exists (select * from sysobjects where name='Alquiler_estado' and xtype='U')
CREATE TABLE DATA_TEAM.Alquiler_estado (
    ALQUILER_ESTADO NVARCHAR(100) PRIMARY KEY,
);

-- Tabla Inquilino
if not exists (select * from sysobjects where name='Inquilino' and xtype='U')
CREATE TABLE DATA_TEAM.Inquilino (
    INQUILINO_ID INT IDENTITY(1,1) PRIMARY KEY,
    INQUILINO_NOMBRE NVARCHAR(100),
    INQUILINO_APELLIDO NVARCHAR(100),
    INQUILINO_DNI NUMERIC(18,0),
    INQUILINO_FECHA_REGISTRO DATETIME,
    INQUILINO_TELEFONO NUMERIC(18,0),
    INQUILINO_MAIL NVARCHAR(100),
    INQUILINO_FECHA_NAC DATETIME
);

-- Tabla Propietario
if not exists (select * from sysobjects where name='Propietario' and xtype='U')
CREATE TABLE DATA_TEAM.Propietario (
    PROPIETARIO_NOMBRE NVARCHAR(100),
    PROPIETARIO_APELLIDO NVARCHAR(100),
    PROPIETARIO_DNI NUMERIC(18,0) PRIMARY KEY,
    PROPIETARIO_FECHA_REGISTRO DATETIME,
    PROPIETARIO_TELEFONO NUMERIC(18,0),
    PROPIETARIO_MAIL NVARCHAR(255),
    PROPIETARIO_FECHA_NAC DATETIME,
);

-- Tabla Sucursal
if not exists (select * from sysobjects where name='Sucursal' and xtype='U')
CREATE TABLE DATA_TEAM.Sucursal (
    SUCURSAL_CODIGO NUMERIC(18,0) PRIMARY KEY,
    SUCURSAL_NOMBRE NVARCHAR(100),
    SUCURSAL_DIRECCION NVARCHAR(100),
    SUCURSAL_TELEFONO NVARCHAR(100),
    SUCURSAL_LOCALIDAD NVARCHAR(100), -- FK
    SUCURSAL_PROVINCIA NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Provincia -- FK
);

ALTER TABLE DATA_TEAM.Sucursal ADD CONSTRAINT FK_Sucursal_Localidad FOREIGN KEY(SUCURSAL_LOCALIDAD, SUCURSAL_PROVINCIA) REFERENCES DATA_TEAM.Localidad(LOCALIDAD, LOCALIDAD_PROVINCIA)
GO

-- Tabla Comprador
if not exists (select * from sysobjects where name='Comprador' and xtype='U')
CREATE TABLE DATA_TEAM.Comprador (
    COMPRADOR_NOMBRE NVARCHAR(100),
    COMPRADOR_APELLIDO NVARCHAR(100),
    COMPRADOR_DNI NUMERIC(18,0) PRIMARY KEY,
    COMPRADOR_FECHA_REGISTRO DATETIME,
    COMPRADOR_TELEFONO NUMERIC(18,0),
    COMPRADOR_MAIL NVARCHAR(100),
    COMPRADOR_FECHA_NAC DATETIME
);

if not exists (select * from sysobjects where name='Inmueble' and xtype='U')
CREATE TABLE DATA_TEAM.Inmueble (
    INMUEBLE_CODIGO NUMERIC(18,0) PRIMARY KEY,
    INMUEBLE_NOMBRE NVARCHAR(100),
    INMUEBLE_DESCRIPCION NVARCHAR(100),
    INMUEBLE_DIRECCION NVARCHAR(100),
    INMUEBLE_SUPERFICIETOTAL NUMERIC(18,2),
    INMUEBLE_ANTIGUEDAD NUMERIC(18,0),
    INMUEBLE_EXPESAS NUMERIC(18,2),
    INMUEBLE_BARRIO NVARCHAR(100) NOT NULL, -- FK
    INMUEBLE_LOCALIDAD NVARCHAR(100) NOT NULL,
    INMUEBLE_PROVINCIA NVARCHAR(100) NOT NULL FOREIGN KEY REFERENCES DATA_TEAM.Provincia,
    INMUEBLE_TIPO_INMUEBLE NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Tipo_inmueble, -- FK
    INMUEBLE_CANT_AMBIENTES NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Cant_ambientes, -- FK
    INMUEBLE_ORIENTACION NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Orientacion, -- FK
    INMUEBLE_DISPOSICION NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Disposicion, -- FK
    INMUEBLE_PROPIETARIO NUMERIC(18,0) FOREIGN KEY REFERENCES DATA_TEAM.Propietario --FK
);

ALTER TABLE DATA_TEAM.Inmueble ADD CONSTRAINT FK_Localidad FOREIGN KEY (INMUEBLE_LOCALIDAD, INMUEBLE_PROVINCIA) REFERENCES DATA_TEAM.Localidad(
	LOCALIDAD,
	LOCALIDAD_PROVINCIA
)
GO

ALTER TABLE DATA_TEAM.Inmueble ADD CONSTRAINT FK_Barrio FOREIGN KEY (INMUEBLE_BARRIO, INMUEBLE_LOCALIDAD, INMUEBLE_PROVINCIA) REFERENCES DATA_TEAM.Barrio(
	BARRIO,
	BARRIO_LOCALIDAD,
	BARRIO_PROVINCIA
)
GO

if not exists (select * from sysobjects where name='Inmueble_Caracteristica' and xtype='U')
CREATE TABLE DATA_TEAM.Inmueble_Caracteristica (
    INMUEBLE_CARACTERISTICA_ID NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
	INMUEBLE_CODIGO NUMERIC(18,0) FOREIGN KEY REFERENCES DATA_TEAM.Inmueble,
	INMUEBLE_CARACTERISTICA_WIFI NUMERIC(18,0),
	INMUEBLE_CARACTERISTICA_CABLE NUMERIC(18,0),
	INMUEBLE_CARACTERISTICA_CALEFACCION NUMERIC(18,0),
	INMUEBLE_CARACTERISTICA_GAS NUMERIC(18,0)
)

-- Tabla Agente
if not exists (select * from sysobjects where name='Agente' and xtype='U')
CREATE TABLE DATA_TEAM.Agente (
    AGENTE_NOMBRE NVARCHAR(100),
    AGENTE_APELLIDO NVARCHAR(100),
    AGENTE_DNI NUMERIC(18,0) PRIMARY KEY,
    AGENTE_FECHA_REGISTRO DATETIME,
    AGENTE_TELEFONO NUMERIC(18,0),
    AGENTE_MAIL NVARCHAR(100),
    AGENTE_FECHA_NAC DATETIME,
    AGENTE_SUCURSAL NUMERIC(18,0) FOREIGN KEY REFERENCES DATA_TEAM.Sucursal
);

-- Tabla Anuncio
if not exists (select * from sysobjects where name='Anuncio' and xtype='U')
CREATE TABLE DATA_TEAM.Anuncio (
    ANUNCIO_CODIGO NUMERIC(18,0) PRIMARY KEY,
    ANUNCIO_FECHA_PUBLICACION DATETIME,
    ANUNCIO_PRECIO_PUBLICADO NUMERIC(18,2),
    ANUNCIO_COSTO_ANUNCIO NUMERIC(18,2),
    ANUNCIO_FECHA_FINALIZACION DATETIME,
    ANUNCIO_TIPO_OPERACION NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Tipo_operacion, -- FK
    ANUNCIO_MONEDA NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Moneda, -- FK
    ANUNCIO_ESTADO NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Estado_anuncio,
    ANUNCIO_TIPO_PERIODO NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Tipo_periodo, -- FK
    ANUNCIO_AGENTE NUMERIC(18,0) FOREIGN KEY REFERENCES DATA_TEAM.Agente,
    ANUNCIO_INMUEBLE NUMERIC(18,0) FOREIGN KEY REFERENCES DATA_TEAM.Inmueble
);

if not exists (select * from sysobjects where name='Venta' and xtype='U')
CREATE TABLE DATA_TEAM.Venta (
    VENTA_CODIGO NUMERIC(18,0) PRIMARY KEY,
    VENTA_FECHA DATETIME,
    VENTA_PRECIO_VENTA NUMERIC(18,2),
    VENTA_COMISION NUMERIC(18,2),
    VENTA_MONEDA NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Moneda, -- FK
    VENTA_ANUNCIO NUMERIC(18,0) FOREIGN KEY REFERENCES DATA_TEAM.Anuncio,
    VENTA_COMPRADOR NUMERIC(18,0) FOREIGN KEY REFERENCES DATA_TEAM.Comprador
);

-- Tabla Alquiler
if not exists (select * from sysobjects where name='Alquiler' and xtype='U')
CREATE TABLE DATA_TEAM.Alquiler (
    ALQUILER_CODIGO NUMERIC(18,0) PRIMARY KEY,
    ALQUILER_FECHA_INICIO DATETIME,
    ALQUILER_FECHA_FIN DATETIME,
    ALQUILER_CANT_PERIODOS NUMERIC(18,0),
    ALQUILER_DEPOSITO NUMERIC(18,2),
    ALQUILER_COMISION NUMERIC(18,2),
    ALQUILER_GASTOS_AVERIGUA NUMERIC(18,2),
    ALQUILER_ESTADO NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Alquiler_estado, -- FK
    ALQUILER_SUCURSAL NUMERIC(18,0) FOREIGN KEY REFERENCES DATA_TEAM.Sucursal,
    ALQUILER_ANUNCIO NUMERIC(18,0) FOREIGN KEY REFERENCES DATA_TEAM.Anuncio,
    ALQUILER_INQUILINO NUMERIC(18,0)
);

-- Tabla Detalle_importe_alquiler
if not exists (select * from sysobjects where name='Detalle_Alquiler' and xtype='U')
CREATE TABLE DATA_TEAM.Detalle_Alquiler (
    DETALLE_ALQ_ID INT IDENTITY(1,1) PRIMARY KEY,
    DETALLE_ALQ_ALQUILER NUMERIC(18,0) FOREIGN KEY REFERENCES DATA_TEAM.Alquiler,
    DETALLE_ALQ_NRO_PERIODO_INI NUMERIC(18,0),
    DETALLE_ALQ_NRO_PERIODO_FIN NUMERIC(18,0),
    DETALLE_ALQ_PRECIO NUMERIC(18,2)
);

-- Tabla Pago_alquiler
if not exists (select * from sysobjects where name='Pago_alquiler' and xtype='U')
CREATE TABLE DATA_TEAM.Pago_alquiler (
    PAGO_ALQUILER_CODIGO NUMERIC(18,0) PRIMARY KEY,
    PAGO_ALQUILER_ALQ NUMERIC (18,0) FOREIGN KEY REFERENCES DATA_TEAM.Alquiler,
    PAGO_ALQUILER_FECHA DATETIME,
    PAGO_ALQUILER_FECHA_VENCIMIENTO DATETIME,
    PAGO_ALQUILER_NRO_PERIODO NUMERIC(18,0),
    PAGO_ALQUILER_DESC NVARCHAR(100),
    PAGO_ALQUILER_FEC_INI DATETIME,
    PAGO_ALQUILER_FEC_FIN DATETIME,
    PAGO_ALQUILER_IMPORTE NUMERIC(18,2),
    PAGO_ALQUILER_MEDIO_PAGO NVARCHAR(100)
);

-- Tabla Pago_venta
if not exists (select * from sysobjects where name='Pago_venta' and xtype='U')
CREATE TABLE DATA_TEAM.Pago_venta (
    PAGO_VENTA_ID INT IDENTITY(1,1) PRIMARY KEY,
    PAGO_VENTA_IMPORTE NUMERIC(18,2),
    PAGO_VENTA_MONEDA NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Moneda, -- FK
    PAGO_VENTA_COTIZACION NUMERIC(18,2),
    PAGO_VENTA_MEDIO_PAGO NVARCHAR(100) FOREIGN KEY REFERENCES DATA_TEAM.Medio_pago, -- FK
    PAGO_VENTA_CODIGO NUMERIC(18,0) FOREIGN KEY REFERENCES DATA_TEAM.Venta
);

------------------------------------------- EJECUCION DE LA MIGRACION 
------------------- 1 DE 3 
EXEC MigrarPropietario
EXEC MigrarInmueble

EXEC MigrarInmuebleCaracteristica
EXEC MigrarSucursal
EXEC MigrarAgente
EXEC MigrarAnuncio


---------------------  2 DE 3
EXEC MigrarComprador
EXEC MigrarVenta
EXEC MigrarPagoVenta

---------------------- 3 DE 3
EXEC MigrarInquilino
EXEC MigrarAlquiler
EXEC MigrarPagoAlquiler
EXEC MigrarDetalleAlquiler


/*
DROP PROCEDURE MigrarInmueble;
DROP PROCEDURE MigrarInmuebleCaracteristica;
DROP PROCEDURE MigrarPropietario;
DROP PROCEDURE MigrarAnuncio;
DROP PROCEDURE MigrarAgente;
DROP PROCEDURE MigrarSucursal;
DROP PROCEDURE MigrarVenta;
DROP PROCEDURE MigrarComprador;
DROP PROCEDURE MigrarPagoVenta;
DROP PROCEDURE MigrarAlquiler;
DROP PROCEDURE MigrarInquilino;
DROP PROCEDURE MigrarPagoAlquiler;
DROP PROCEDURE MigrarDetalleAlquiler;

*/

/*
-- Eliminar las llaves foráneas que hacen referencia a otras tablas
ALTER TABLE DATA_TEAM.Inmueble DROP CONSTRAINT FK_Barrio;
ALTER TABLE DATA_TEAM.Inmueble DROP CONSTRAINT FK_Localidad;
ALTER TABLE DATA_TEAM.Sucursal DROP CONSTRAINT FK_Sucursal_Localidad;
ALTER TABLE DATA_TEAM.Barrio DROP CONSTRAINT FK_Localidad;

-- Eliminar las tablas con dependencias
DROP TABLE DATA_TEAM.Inmueble;
DROP TABLE DATA_TEAM.Sucursal;
DROP TABLE DATA_TEAM.Barrio;
DROP TABLE DATA_TEAM.Localidad;
DROP TABLE DATA_TEAM.Provincia;

-- Eliminar las restantes tablas
DROP TABLE DATA_TEAM.Pago_venta;
DROP TABLE DATA_TEAM.Pago_alquiler;
DROP TABLE DATA_TEAM.Detalle_Alquiler;
DROP TABLE DATA_TEAM.Alquiler;
DROP TABLE DATA_TEAM.Venta;
DROP TABLE DATA_TEAM.Anuncio;
DROP TABLE DATA_TEAM.Agente;
DROP TABLE DATA_TEAM.Inmueble_Caracteristica;
DROP TABLE DATA_TEAM.Comprador;
DROP TABLE DATA_TEAM.Propietario;
DROP TABLE DATA_TEAM.Inquilino;
DROP TABLE DATA_TEAM.Alquiler_estado;
DROP TABLE DATA_TEAM.Medio_pago;
DROP TABLE DATA_TEAM.Tipo_operacion;
DROP TABLE DATA_TEAM.Moneda;
DROP TABLE DATA_TEAM.Estado_anuncio;
DROP TABLE DATA_TEAM.Tipo_periodo;
DROP TABLE DATA_TEAM.Tipo_inmueble;
DROP TABLE DATA_TEAM.Disposicion;
DROP TABLE DATA_TEAM.Orientacion;
DROP TABLE DATA_TEAM.Cant_ambientes;
*/
/*
DROP SCHEMA DATA_TEAM;
*/